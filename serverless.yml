service: chime-demo
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  # you can overwrite defaults here
  stage: dev
  region: ap-southeast-1

  eventBridge:
    useCloudFormation: true

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - execute-api:*
        - s3:*
        - sqs:*
        - chime:*
        - logs:*
        - kms:*
      Resource: "*"

functions:
  putMeeting:
    handler: handler.putMeeting
    events:
      - http:
          path: /putMeeting
          method: any
          cors: true
  getAttendee:
    handler: handler.getAttendee
    events:
      - http:
          path: /getAttendee
          method: any
          cors: true

  putAttendee:
    handler: handler.putAttendee
    events:
      - http:
          path: /putAttendee
          method: any
          cors: true

  createMeeting:
    handler: handler.createMeeting
    events:
      - http:
          path: /createMeeting
          method: any
          cors: true

  join:
    handler: handler.join
    events:
      - http:
          path: /join
          method: any
          cors: true

  end:
    handler: handler.end
    events:
      - http:
          path: /end
          method: any
          cors: true

  attendee:
    handler: handler.attendee
    events:
      - http:
          path: /attendee
          method: any
          cors: true

  sqs_handler:
    handler: handler.sqs_handler
    events:
      - http:
          path: /sqs_handler
          method: any
          cors: true

  event_bridge_handler:
    handler: handler.event_bridge_handler
    events:
      - http:
          path: /event_bridge_handler
          method: any
          cors: true

  logs:
    handler: handler.logs
    events:
      - http:
          path: /logs
          method: any
          cors: true
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    Meetings:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: chime-meetings-dev
        AttributeDefinitions:
          - AttributeName: "Title"
            AttributeType: "S"
          - AttributeName: "Passcode"
            AttributeType: "S"
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: "Title"
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: "Passcode"
            KeySchema:
              - AttributeName: "Passcode"
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TimeToLiveSpecification:
          AttributeName: "TTL"
          Enabled: true
    Attendees:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: chime-attendees-dev
        AttributeDefinitions:
          - AttributeName: "AttendeeId"
            AttributeType: "S"
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: "AttendeeId"
            KeyType: HASH
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
